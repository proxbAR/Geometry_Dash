import pygameimport sysimport timeimport picklefrom operator import itemgetter#----------Colors----------#White = (255,255,255)Black = (0,0,0)Red = (255,0,0)Green = (0,255,0)Blue = (0,0,255)Maroon = (128, 0, 0)WineRed = (153,0,18)light_red = (200,0,0)light_blue = (0,0,175)light_yellow = (160,170,0)Yellow = (255,255,0)#----------ScreenDimensions----------#screen_width, screen_height = 800,600#----------BlockDimensions----------#bblock_w, bblock_h = 39,30sblock_w, sblock_h = 32,29s1st_y, s2nd_y, s3rd_y = 171,371,571 b1st_y, b2nd_y, b3rd_y = 170,370,570def musicPlay():    pygame.mixer.music.load('MainMenuTrack.wav')    pygame.mixer.music.play(-1,0.0)pygame.init()musicPlay()screen = pygame.display.set_mode((screen_width,screen_height))  pygame.display.set_caption('GEOMETRY DASH')clock = pygame.time.Clock()#----------MainMenu----------#pause=Falsedef highscoredisplay():    L=high_score_display()    hs=True    while hs:        for i in pygame.event.get():            if i.type==pygame.QUIT: pygame.quit(); quit()        screen.fill(White)        if len(L)>=10: m=L[0:10]        else: m=L        n=50        buttons("BACK",650,500,100,50,light_red,Red,game_intro)        for i in m:            hfont=pygame.font.Font('freesansbold.ttf',20)            s,r=text_objects(i[0],hfont)            r.center=(100,n)            screen.blit(s,r)            Vsurf,Vrect=text_objects(str(i[1]),hfont)            Vrect.center=(600,n)            screen.blit(Vsurf,Vrect)            n+=50        pygame.display.update()        def gameover():    musicPlay()    Player.enemy_num=0    Player.scoreFinal=0    gameover=True    while gameover:        for i in pygame.event.get():            if i.type == pygame.QUIT: pygame.quit(); quit()        screen.fill(Black)        Ltext=pygame.font.Font('freesansbold.ttf',50)        tsurf,trect=text_objects("Game Over",Ltext,White)        trect.center=(screen_width/2,screen_height/2)        screen.blit(tsurf,trect)        buttons("PLAY AGAIN",150,450,100,50,Black,Red,mainFuncCode,10,White)        buttons("QUIT",550,450,100,50,Black,Blue,quit1,20,White)        buttons("MAIN MENU",30,40,100,50,Black,Yellow,game_intro,15,White)        pygame.display.update()    high_score_display()    def text_objects(text,font,color=Black):    Textsurf=font.render(text,True,color)    return Textsurf, Textsurf.get_rect()def quit1():    pygame.quit()    sys.exit()    def buttons(msg,x,y,w,h,ic,ac,action=None,size=20,color=Black):    mouse=pygame.mouse.get_pos()        click=pygame.mouse.get_pressed()    #print click    if x+w > mouse[0] > x and y+h > mouse[1] > y:        pygame.draw.rect(screen,ac,(x,y,w,h))        if click[0]==1 and action!=None:            action()    else:        pygame.draw.rect(screen,ic,(x,y,w,h))    smalltext = pygame.font.Font("freesansbold.ttf",size)    textsurf,textrect=text_objects(msg,smalltext,color)    textrect.center=((x+(w/2)), (y+(h/2)))    screen.blit(textsurf,textrect)def howtoplay():    pygame.init()    howtoplay=True    while howtoplay:        for i in pygame.event.get():            if i.type == pygame.QUIT: pygame.quit(); quit()        screen.fill(White)        Ltext=pygame.font.Font('freesansbold.ttf',20)        L=['1.Press the space bar to jump.','2.Press P to pause.','3.Press the quit button to quit.']        n=100        for i in L:            tsurf,trect=text_objects(i,Ltext,Black)            trect.x=100            trect.y=n            screen.blit(tsurf,trect)            n+=50        buttons("Back",350,525,100,50,light_red,Red,game_intro)        pygame.display.update()def unpause():    global pause    pygame.mixer.music.unpause()    pause=Falsedef paused():    global pause    while pause:        for i in pygame.event.get():            if i.type == pygame.QUIT: pygame.quit(); quit()        screen.fill(Black)        Ltext=pygame.font.Font('freesansbold.ttf',50)        tsurf,trect=text_objects("PAUSED",Ltext,White)        trect.center=(screen_width/2,screen_height/2)        screen.blit(tsurf,trect)        buttons("CONTINUE",150,450,100,50,Black,Red,unpause,18,White)        buttons("QUIT",550,450,100,50,Black,Blue,quit1,20,White)        pygame.display.update()def game_intro():    pygame.init()    intro=True    while intro:        for i in pygame.event.get():            if i.type == pygame.QUIT: pygame.quit(); quit()        screen.fill(Black)        Ltext=pygame.font.Font('freesansbold.ttf',50)        tsurf,trect=text_objects("GEOMETRY DASH",Ltext,White)        trect.center=(screen_width/2,screen_height/2)        screen.blit(tsurf,trect)        buttons("PLAY",150,450,100,50,light_red,Red,mainFuncCode,20,White)        buttons("QUIT",550,450,100,50,light_blue,Blue,quit1,20,White)        buttons("HOW TO PLAY",350,450,100,50,Black,Yellow,howtoplay,13,White)        buttons("HIGH SCORES",350,175,100,50,Black,Blue,highscoredisplay,13,White)        pygame.display.update()        #----------Classes----------#class Wall(pygame.sprite.Sprite):    def __init__(self,x,y,width,height,color):        pygame.sprite.Sprite.__init__(self)        self.image = pygame.Surface((width,height))        self.image.fill(color)        self.rect = self.image.get_rect()        self.rect.x = x        self.rect.y = yclass Player(pygame.sprite.Sprite):    scoreFinal = 0    enemy_num = 0    def __init__(self,x,y):        pygame.sprite.Sprite.__init__(self)        self.image = pygame.Surface((20,20))        self.image.fill(White)        self.rect = self.image.get_rect()        self.rect.x = x        self.rect.y = y        self.walls = None        self.enemy = None        self.change_y = 0        self.change_fin = 4            def update(self):        self.gravity()        self.rect.x+=self.change_fin        '''brick_hit = pygame.sprite.spritecollide(self,self.walls,False)        for block in brick_hit:            if self.change_x>0: self.rect.right = block.rect.left            elif self.change_x<0: self.rect.left = block.rect.right'''        self.rect.y+=self.change_y        brick_hit = pygame.sprite.spritecollide(self,self.walls,False)        for block in brick_hit:            if self.change_y>0: self.rect.bottom = block.rect.top            elif self.change_y<0: self.rect.top = block.rect.bottom        if self.rect.x>800:            if self.rect.y in range(0,200): self.rect.x = 0; self.rect.y = 380            elif self.rect.y in range(200,400): self.rect.x = 0; self.rect.y = 580            elif self.rect.y in range(400,600) and Player.enemy_num == 0: Player.enemy_num = 1; self.rect.x = 0; self.rect.y = 180            elif self.rect.y in range(400,600) and Player.enemy_num == 1: Player.enemy_num = 2; self.rect.x = 0; self.rect.y = 180            elif self.rect.y in range(400,600) and Player.enemy_num == 2: Player.enemy_num = 3; self.rect.x = 0; self.rect.y = 180            elif self.rect.y in range(400,600) and Player.enemy_num == 3: Player.enemy_num = 4; self.rect.x = 0; self.rect.y = 180            elif self.rect.y in range(400,600) and Player.enemy_num == 4: Player.enemy_num = 5        if Player.enemy_num==5: y = Player.scoreFinal; get_name(y)        #if self.rect.x<-20: self.change_fin = 4; Player.scoreFinal+=1        enemy_hit = pygame.sprite.spritecollide(self,self.enemy,False)        for enemy in enemy_hit: self.rect.x = 0; Player.scoreFinal+=1    def gravity(self):        if self.change_y == 0: self.change_y = 1        else: self.change_y += .35        if self.rect.y == screen_height - self.rect.height and self.change_y >= 0:            self.change_y = 0            self.rect.y = screen_height - self.rect.height         elif self.rect.y == screen_height - (self.rect.height + 200) and self.change_y >=0:            self.change_y = 0            self.rect.y = screen_height - (self.rect.height + 200)        elif self.rect.y == screen_height - (self.rect.height + 400) and self.change_y >=0:            self.change_y = 0            self.rect.y = screen_height - (self.rect.height + 400)    def jump(self):        self.rect.y += 1        platform_hit_list = pygame.sprite.spritecollide(self, self.walls, False)        self.rect.y -= 1        if len(platform_hit_list) > 0: self.change_y = -5        #----------BinaryFunctions---------#def get_name(score):    name = raw_input('Enter your name: ')    f = open('highScores.dat','rb')    score_dict = pickle.load(f)    f.close()    score_dict[name] = score    f = open('highScores.dat','wb')    pickle.dump(score_dict,f)    f.close()    gameover()def high_score_display():    f = open('highScores.dat','rb')    score_dict1 = pickle.load(f)    f.close()    x = score_dict1.items()    score_dict1 = sorted(x, key = itemgetter(1))    return score_dict1#----------MainCode----------#        def mainFuncCode():    global pause    pygame.mixer.music.load('GameTrack.wav')    pygame.mixer.music.play(-1,0.0)    FPS = 60    font = pygame.font.SysFont(None, 36)        #----------RoomSpriteGroups----------#    wall_sprite = pygame.sprite.Group()    all_sprite = pygame.sprite.Group()    level_sprite = pygame.sprite.Group()        #----------EnemySpriteGroups----------#    level1_enemy_sprite = pygame.sprite.Group()    level2_enemy_sprite = pygame.sprite.Group()    level3_enemy_sprite = pygame.sprite.Group()    level4_enemy_sprite = pygame.sprite.Group()    level5_enemy_sprite = pygame.sprite.Group()    #----------LevelCreation----------#    wall = [[0,0,820,0],            [0,200,820,0],            [0,400,820,0],            [0,600,820,0]]    for i in wall:        wall = Wall(i[0],i[1],i[2],i[3],Black)        wall_sprite.add(wall)        all_sprite.add(wall)            background_walls = [[0,0,800,200,WineRed],                        [0,200,800,200,light_red],                        [0,400,800,200,WineRed]]    for i in background_walls:        back_ground = Wall(i[0],i[1],i[2],i[3],i[4])        level_sprite.add(back_ground)            #----------PlayerCreation----------#    player = Player(0,180)    all_sprite.add(player)    #----------EnemyCreation----------#    #---1---#    level1_enemy = [[400,s2nd_y,sblock_w,sblock_h,WineRed],                    [200,s3rd_y,sblock_w,sblock_h,light_red],                    [600,s3rd_y,sblock_w,sblock_h,light_red]]    for i in level1_enemy:        level1_e = Wall(i[0],i[1],i[2],i[3],i[4])        level1_enemy_sprite.add(level1_e)    #---2---#    level2_enemy = [[200,s1st_y,sblock_w,sblock_h,light_red],                    [600,s1st_y,sblock_w,sblock_h,light_red],                    [220,s2nd_y,sblock_w,sblock_h,WineRed],                    [420,s2nd_y,sblock_w,sblock_h,WineRed],                    [620,s2nd_y,sblock_w,sblock_h,WineRed],                    [260,s3rd_y,sblock_w,sblock_h,light_red],                    [460,s3rd_y,sblock_w,sblock_h,light_red],                    [660,s3rd_y,sblock_w,sblock_h,light_red]]    for i in level2_enemy:        level2_e = Wall(i[0],i[1],i[2],i[3],i[4])        level2_enemy_sprite.add(level2_e)    #---3---#    level3_enemy = [[150,s1st_y,sblock_w,sblock_h,light_red],                    [390,b1st_y,bblock_w,bblock_h,light_red],                    [650,s1st_y,sblock_w,sblock_h,light_red],                    [120,s2nd_y,sblock_w,sblock_h,WineRed],                    [300,s2nd_y,sblock_w,sblock_h,WineRed],                    [530,s2nd_y,sblock_w,sblock_h,WineRed],                    [710,s2nd_y,sblock_w,sblock_h,WineRed],                    [150,b3rd_y,bblock_w,bblock_h,light_red],                    [390,b3rd_y,sblock_w,sblock_h,light_red],                    [650,b3rd_y,bblock_w,bblock_h,light_red]]    for i in level3_enemy:        level3_e = Wall(i[0],i[1],i[2],i[3],i[4])        level3_enemy_sprite.add(level3_e)    #---4---#    level4_enemy = [[200,b1st_y,bblock_w,bblock_h,light_red],                    [590,b1st_y,bblock_w,bblock_h,light_red],                    [190,b2nd_y,bblock_w,bblock_h,WineRed],                    [390,b2nd_y,bblock_w,bblock_h,WineRed],                    [660,b2nd_y,bblock_w,bblock_h,WineRed],                    [375,b3rd_y,bblock_w,bblock_h,light_red],                    [670,b3rd_y,bblock_w,bblock_h,light_red]]    for i in level4_enemy:        level4_e = Wall(i[0],i[1],i[2],i[3],i[4])        level4_enemy_sprite.add(level4_e)            #---5---#    level5_enemy = [[0,135,800,30,light_red],                    [200,b2nd_y,bblock_w,bblock_h,WineRed],                    [289,328,sblock_w,sblock_h,WineRed],                    [520,b2nd_y,bblock_w,bblock_h,WineRed],                    [608,328,sblock_w,sblock_h,WineRed],                    [300,b3rd_y,bblock_w,bblock_h,light_red],                    [389,528,sblock_w,sblock_h,light_red],                    [620,b3rd_y,bblock_w,bblock_h,light_red],                    [708,528,sblock_w,sblock_h,light_red]]    for i in level5_enemy:        level5_e = Wall(i[0],i[1],i[2],i[3],i[4])        level5_enemy_sprite.add(level5_e)            enemy_dict = {0:[level1_enemy_sprite,'1/5'],                  1:[level2_enemy_sprite,'2/5'],                  2:[level3_enemy_sprite,'3/5'],                  3:[level4_enemy_sprite,'4/5'],                  4:[level5_enemy_sprite,'5/5']}    player.enemy = enemy_dict[Player.enemy_num][0]    player.walls = wall_sprite    while True:        for event in pygame.event.get():            if event.type == pygame.QUIT: pygame.quit(); quit()            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_SPACE: player.jump()                elif event.key==pygame.K_p: pygame.mixer.music.pause(); pause = True; paused()            if event.type == pygame.MOUSEBUTTONDOWN:                mouse_pos = pygame.mouse.get_pos()                if mouse_pos[0] in range(730,793) and mouse_pos[1] in range(10,36):                    Player.scoreFinal = 0                    Player.enemy_num = 0                    musicPlay()                    game_intro()        player.enemy = enemy_dict[Player.enemy_num][0]        player.update()                level_sprite.draw(screen)        enemy_dict[Player.enemy_num][0].draw(screen)                score_game = font.render('ATTEMPTS: ' + str(player.scoreFinal), True, Red)        screen.blit(score_game, [10,10])        level_num_game = font.render('LEVEL: ' + enemy_dict[Player.enemy_num][1], True, Red)        screen.blit(level_num_game, [355,10])        game_quit = font.render('QUIT', True, Red)        screen.blit(game_quit, [730,10])        all_sprite.draw(screen)        clock.tick(FPS)        pygame.display.update()game_intro()